// ------
// Animations
// ------

/// CSS cubic-bezier timing functions ported from Bourbon via jquery.easie (github.com/jaukia/easie)
///
/// @group animation
/// @type cubic-bezier
/// @link http://jqueryui.com/resources/demos/effect/easing.html

$ease-in-quad: cubic-bezier(0.550, 0.085, 0.680, 0.530);
$ease-in-cubic: cubic-bezier(0.550, 0.055, 0.675, 0.190);
$ease-in-quart: cubic-bezier(0.895, 0.030, 0.685, 0.220);
$ease-in-quint: cubic-bezier(0.755, 0.050, 0.855, 0.060);
$ease-in-sine: cubic-bezier(0.470, 0, 0.745, 0.715);
$ease-in-expo: cubic-bezier(0.950, 0.050, 0.795, 0.035);
$ease-in-circ: cubic-bezier(0.600, 0.040, 0.980, 0.335);
$ease-in-back: cubic-bezier(0.600, -0.280, 0.735, 0.045);
$ease-in-swift: cubic-bezier(0.900, 0, 0.450, 1);

$ease-out-quad: cubic-bezier(0.250, 0.460, 0.450, 0.940);
$ease-out-cubic: cubic-bezier(0.215, 0.610, 0.355, 1);
$ease-out-quart: cubic-bezier(0.165, 0.840, 0.440, 1);
$ease-out-quint: cubic-bezier(0.230, 1, 0.320, 1);
$ease-out-sine: cubic-bezier(0.390, 0.575, 0.565, 1);
$ease-out-expo: cubic-bezier(0.190, 1, 0.220, 1);
$ease-out-circ: cubic-bezier(0.075, 0.820, 0.165, 1);
$ease-out-back: cubic-bezier(0.175, 0.885, 0.320, 1.275);
$ease-out-swift: cubic-bezier(0.550, 0, 0.100, 1);

$ease-in-out-quad: cubic-bezier(0.455, 0.030, 0.515, 0.955);
$ease-in-out-cubic: cubic-bezier(0.645, 0.045, 0.355, 1);
$ease-in-out-quart: cubic-bezier(0.770, 0, 0.175, 1);
$ease-in-out-quint: cubic-bezier(0.860, 0, 0.070, 1);
$ease-in-out-sine: cubic-bezier(0.445, 0.050, 0.550, 0.950);
$ease-in-out-expo: cubic-bezier(1, 0, 0, 1);
$ease-in-out-circ: cubic-bezier(0.785, 0.135, 0.150, 0.860);
$ease-in-out-back: cubic-bezier(0.680, -0.550, 0.265, 1.550);
$ease-in-out-swift: cubic-bezier(0.900, 0, 0.100, 1);


//- Mixin: Animated
///
/// Sets the main animation properties. Optionally, we have a very basic set of custom animtions that can be passed. Note you must call initialize-animation mixin on root of your document to enable the keyframes;
///
/// @param {variable} $animation-name [null] -  Currently available animation names: 'fade-in', 'fade-in-up', 'fade-in-down', 'over-scale'
/// @param {variable} $animation-duration [.65s] -  How long animation takes
/// @param {variable} $animation-easing [$ease-out-quad] -  Animation easing type
/// @group animation
/// @link http://codepen.io/dbox/pen/ZboVOg

@mixin animated($animation-name: null, $animation-duration: .65s, $animation-delay: null, $animation-easing: $ease-out-quad) {
  animation-timing-function: $animation-easing;
  animation-duration: $animation-duration;
  animation-fill-mode: both;

  @if ($animation-name) {
    animation-name: $animation-name;
  }
  @if ($animation-delay) {
    animation-delay: $animation-delay;
  }

}

//- Additive Mixin: Initialize animation
///
/// Render the keyframes needed for animation mixin. Required to pass animation-names to `animated` mixin.
///
/// @group animation
/// @example
///   @include initialize-animation();
/// @link http://codepen.io/dbox/pen/ZboVOg

@mixin initialize-animation() {
  @keyframes fade-in-up {
    0% { opacity: 0; transform: translate3d(0, 15%, 0); }
    100% { opacity: 1; transform: none; }
  }

  @keyframes fade-in-down {
    0% { opacity: 0; transform: translate3d(0, -15%, 0); }
    100% { opacity: 1; transform: none; }
  }

  @keyframes over-scale {
    0% { opacity: 0; transform: scale(0);  }
    70% { transform: scale(1.1); }
    100% { opacity: 1; transform: scale(1);  }
  }

  @keyframes fade-in {
    0% { opacity: 0; }
    100% { opacity: 1;}
  }
}
